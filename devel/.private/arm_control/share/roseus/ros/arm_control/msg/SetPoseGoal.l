;; Auto-generated. Do not edit!


(when (boundp 'arm_control::SetPoseGoal)
  (if (not (find-package "ARM_CONTROL"))
    (make-package "ARM_CONTROL"))
  (shadow 'SetPoseGoal (find-package "ARM_CONTROL")))
(unless (find-package "ARM_CONTROL::SETPOSEGOAL")
  (make-package "ARM_CONTROL::SETPOSEGOAL"))

(in-package "ROS")
;;//! \htmlinclude SetPoseGoal.msg.html


(defclass arm_control::SetPoseGoal
  :super ros::object
  :slots (_goal _eps ))

(defmethod arm_control::SetPoseGoal
  (:init
   (&key
    ((:goal __goal) (instance arm_control::Pose :init))
    ((:eps __eps) 0.0)
    )
   (send-super :init)
   (setq _goal __goal)
   (setq _eps (float __eps))
   self)
  (:goal
   (&rest __goal)
   (if (keywordp (car __goal))
       (send* _goal __goal)
     (progn
       (if __goal (setq _goal (car __goal)))
       _goal)))
  (:eps
   (&optional __eps)
   (if __eps (setq _eps __eps)) _eps)
  (:serialization-length
   ()
   (+
    ;; arm_control/Pose _goal
    (send _goal :serialization-length)
    ;; float64 _eps
    8
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; arm_control/Pose _goal
       (send _goal :serialize s)
     ;; float64 _eps
       (sys::poke _eps (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; arm_control/Pose _goal
     (send _goal :deserialize buf ptr-) (incf ptr- (send _goal :serialization-length))
   ;; float64 _eps
     (setq _eps (sys::peek buf ptr- :double)) (incf ptr- 8)
   ;;
   self)
  )

(setf (get arm_control::SetPoseGoal :md5sum-) "20235d062a0a825673e71bb666e5bec7")
(setf (get arm_control::SetPoseGoal :datatype-) "arm_control/SetPoseGoal")
(setf (get arm_control::SetPoseGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# Define the goal
arm_control/Pose goal
float64 eps

================================================================================
MSG: arm_control/Pose
float64 x
float64 y
float64 z
float64[] rotx
float64[] roty
float64[] rotz
")



(provide :arm_control/SetPoseGoal "20235d062a0a825673e71bb666e5bec7")


