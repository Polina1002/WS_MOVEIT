;; Auto-generated. Do not edit!


(when (boundp 'arm_control::SetPoseFeedback)
  (if (not (find-package "ARM_CONTROL"))
    (make-package "ARM_CONTROL"))
  (shadow 'SetPoseFeedback (find-package "ARM_CONTROL")))
(unless (find-package "ARM_CONTROL::SETPOSEFEEDBACK")
  (make-package "ARM_CONTROL::SETPOSEFEEDBACK"))

(in-package "ROS")
;;//! \htmlinclude SetPoseFeedback.msg.html


(defclass arm_control::SetPoseFeedback
  :super ros::object
  :slots (_currentPose _error _time ))

(defmethod arm_control::SetPoseFeedback
  (:init
   (&key
    ((:currentPose __currentPose) (instance arm_control::Pose :init))
    ((:error __error) 0.0)
    ((:time __time) 0.0)
    )
   (send-super :init)
   (setq _currentPose __currentPose)
   (setq _error (float __error))
   (setq _time (float __time))
   self)
  (:currentPose
   (&rest __currentPose)
   (if (keywordp (car __currentPose))
       (send* _currentPose __currentPose)
     (progn
       (if __currentPose (setq _currentPose (car __currentPose)))
       _currentPose)))
  (:error
   (&optional __error)
   (if __error (setq _error __error)) _error)
  (:time
   (&optional __time)
   (if __time (setq _time __time)) _time)
  (:serialization-length
   ()
   (+
    ;; arm_control/Pose _currentPose
    (send _currentPose :serialization-length)
    ;; float64 _error
    8
    ;; float64 _time
    8
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; arm_control/Pose _currentPose
       (send _currentPose :serialize s)
     ;; float64 _error
       (sys::poke _error (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
     ;; float64 _time
       (sys::poke _time (send s :buffer) (send s :count) :double) (incf (stream-count s) 8)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; arm_control/Pose _currentPose
     (send _currentPose :deserialize buf ptr-) (incf ptr- (send _currentPose :serialization-length))
   ;; float64 _error
     (setq _error (sys::peek buf ptr- :double)) (incf ptr- 8)
   ;; float64 _time
     (setq _time (sys::peek buf ptr- :double)) (incf ptr- 8)
   ;;
   self)
  )

(setf (get arm_control::SetPoseFeedback :md5sum-) "57a46cd82a7bce3b86dc2d8131f7b485")
(setf (get arm_control::SetPoseFeedback :datatype-) "arm_control/SetPoseFeedback")
(setf (get arm_control::SetPoseFeedback :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# Define a feedback message
arm_control/Pose currentPose
float64 error
float64 time

================================================================================
MSG: arm_control/Pose
float64 x
float64 y
float64 z
float64[] rotx
float64[] roty
float64[] rotz
")



(provide :arm_control/SetPoseFeedback "57a46cd82a7bce3b86dc2d8131f7b485")


